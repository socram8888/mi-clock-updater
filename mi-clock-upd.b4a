Build1=Default,pet.orca.miclockupd
File1=MainLayout.bal
FileGroup1=Default Group
Group=Default Group
Library1=core
Library2=xui
Library3=ble2
Library4=runtimepermissions
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="14" android:targetSdkVersion="29"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~CreateResourceFromFile(Macro, Themes.LightTheme)~\n~'End of default text.~\n~AddPermission(android.permission.ACCESS_FINE_LOCATION)~\n~
Module1=Starter
NumberOfFiles=1
NumberOfLibraries=4
NumberOfModules=1
Version=10.2
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: Mi Clock Updater
	#VersionCode: 1
	#VersionName: 
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: unspecified
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: True
#End Region

Sub Process_Globals
	'These global variables will be declared once when the application starts.
	'These variables can be accessed from all modules.
	Private Xui As XUI
End Sub

Sub Globals
	'These global variables will be redeclared each time the activity is created.
	Private DeviceList As ListView
	Private ScanButton As ToggleButton
	Private UpdateAllButton As Button
End Sub

Sub Activity_Create(FirstTime As Boolean)
	Activity.LoadLayout("MainLayout")
End Sub

Sub Activity_Resume

End Sub

Sub Activity_Pause (UserClosed As Boolean)

End Sub

' SCAN TOGGLE BUTTON CALLBACKS

Sub ScanButton_CheckedChange(checked As Boolean)
	If Not(checked) Then
		DeviceList.Clear
	End If
	Starter.ToggleScan(checked)
End Sub

' DEVICE LIST CALLBACKS

Sub DeviceList_ItemClick(pos As Int, value As Object)
	If Starter.UpdateRunning Then
		Xui.MsgboxAsync("Another update is still running", "Error")
		Return
	End If

	UpdateAllButton.Enabled = False

	Starter.rp.CheckAndRequest(Starter.rp.PERMISSION_ACCESS_FINE_LOCATION)
	Wait For Activity_PermissionResult (Permission As String, Result As Boolean)
	If Not(Result) Then
		UpdateAllButton.Enabled = False
		Xui.MsgboxAsync("Permission denied", "Error")
		Return
	End If

	Starter.BatchUpdate = False
	Starter.UpdateDevice(pos)
End Sub

' UPDATE ALL CALLBACKS

Sub UpdateAllButton_Click
	If Starter.UpdateRunning Then
		Starter.BatchUpdate = False
		UpdateAllButton.Enabled = False
		ToastMessageShow("Stop requested", False)
		Return
	End If

	Starter.rp.CheckAndRequest(Starter.rp.PERMISSION_ACCESS_FINE_LOCATION)
	Wait For Activity_PermissionResult (Permission As String, Result As Boolean)
	If Not(Result) Then
		Xui.MsgboxAsync("Permission denied", "Error")
		Return
	End If

	UpdateAllButton.Text = "Abort batch update"
	Starter.UpdateAllDevices
End Sub

' CUSTOM MVC SUBS

Sub BleStateChanged
	DeviceList.Clear
	ScanButton.Checked = False

	Select Starter.currentState
		Case Starter.manager.STATE_UNSUPPORTED
			Xui.MsgboxAsync("Bluetooth not supported", "Error")
			ScanButton.Enabled = False
			UpdateAllButton.Enabled = False
			
		Case Starter.manager.STATE_POWERED_OFF
			Xui.MsgboxAsync("Bluetooth not enabled", "Error")
			ScanButton.Enabled = False
			UpdateAllButton.Enabled = False

		Case Starter.manager.STATE_POWERED_ON
			ScanButton.Enabled = True
			UpdateAllButton.Enabled = True
	End Select
End Sub

Sub NewDeviceFound
	Dim dev As FoundDevice = Starter.FoundDevices.Get(Starter.FoundDevices.Size - 1)
	DeviceList.AddTwoLines(dev.Name, dev.Mac)
End Sub

Sub UpdateFinished
	UpdateAllButton.Text = "Update all"
	UpdateAllButton.Enabled = True
End Sub
